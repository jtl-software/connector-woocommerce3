<?php

namespace {
    class WPML_Media_Upgrade
    {
        static function run()
        {
        }
    }
    class WPML_Media_Dependencies
    {
        function check()
        {
        }
        function _no_wpml_warning()
        {
        }
    }
    // autoload_real.php @generated by Composer
    class ComposerAutoloaderInitde6a1be46e7de7c6f2b8ce976cc4596c
    {
        public static function loadClassLoader($class)
        {
        }
        /**
         * @return \Composer\Autoload\ClassLoader
         */
        public static function getLoader()
        {
        }
    }
}
namespace Composer\Autoload {
    class ComposerStaticInitde6a1be46e7de7c6f2b8ce976cc4596c
    {
        public static $classMap = array('Composer\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php', 'WPML\\Media\\Classes\\WPML_Media_Attachment_By_URL_Query' => __DIR__ . '/../..' . '/classes/class-wpml-media-attachment-by-url-query.php', 'WPML\\Media\\Classes\\WPML_Media_Classic_Audio_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-classic-audio-parser.php', 'WPML\\Media\\Classes\\WPML_Media_Classic_Element_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-classic-element-parser.php', 'WPML\\Media\\Classes\\WPML_Media_Classic_Video_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-classic-video-parser.php', 'WPML\\Media\\Classes\\WPML_Media_Element_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-element-parser.php', 'WPML\\Media\\Classes\\WPML_Media_Element_Translation_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-element-translation-factory.php', 'WPML\\Media\\Classes\\WPML_Media_File_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-file-parser.php', 'WPML\\Media\\Classes\\WPML_Media_Href_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-href-parser.php', 'WPML\\Media\\Classes\\WPML_Media_Image_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-image-parser.php', 'WPML\\Media\\Classes\\WPML_Non_Embedded_Pdf_Parser' => __DIR__ . '/../..' . '/classes/media-translation/class-non-embedded-pdf-parser.php', 'WPML\\Media\\Factories\\WPML_Media_Attachment_By_URL_Query_Factory' => __DIR__ . '/../..' . '/classes/class-wpml-media-attachment-by-url-query-factory.php', 'WPML\\Media\\Factories\\WPML_Media_Element_Parser_Factory' => __DIR__ . '/../..' . '/classes/media-translation/factories/class-wpml-media-element-parser-factory.php', 'WPML\\Media\\Widgets\\Block\\DisplayTranslation' => __DIR__ . '/../..' . '/classes/Widgets/Block/DisplayTranslation.php', 'WPML_Cache_Directory' => __DIR__ . '/..' . '/wpml-shared/wpml-lib-cache/src/cache/class-wpml-cache-directory.php', 'WPML_Core_Version_Check' => __DIR__ . '/..' . '/wpml-shared/wpml-lib-dependencies/src/dependencies/class-wpml-core-version-check.php', 'WPML_Dependencies' => __DIR__ . '/..' . '/wpml-shared/wpml-lib-dependencies/src/dependencies/class-wpml-dependencies.php', 'WPML_Media' => __DIR__ . '/../..' . '/classes/class-wpml-media.php', 'WPML_Media_2_3_0_Migration' => __DIR__ . '/../..' . '/classes/upgrade/class-wpml-media-2-3-0-migration.php', 'WPML_Media_Add_To_Basket' => __DIR__ . '/../..' . '/classes/media-selector/class-wpml-media-add-to-basket.php', 'WPML_Media_Add_To_Basket_Factory' => __DIR__ . '/../..' . '/classes/media-selector/class-wpml-media-add-to-basket-factory.php', 'WPML_Media_Attachment_By_URL' => __DIR__ . '/../..' . '/classes/class-wpml-media-attachment-by-url.php', 'WPML_Media_Attachment_By_URL_Factory' => __DIR__ . '/../..' . '/classes/class-wpml-media-attachment-by-url-factory.php', 'WPML_Media_Attachment_Image_Update' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-attachment-image-update.php', 'WPML_Media_Attachment_Image_Update_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-attachment-image-update-factory.php', 'WPML_Media_Attachments_Query' => __DIR__ . '/../..' . '/classes/class-wpml-media-attachments-query.php', 'WPML_Media_Attachments_Query_Factory' => __DIR__ . '/../..' . '/classes/class-wpml-media-attachments-query-factory.php', 'WPML_Media_Batch_Url_Translation' => __DIR__ . '/../..' . '/classes/batch-media-url-translation/wpml-media-batch-media-url-translation.php', 'WPML_Media_Caption' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-caption.php', 'WPML_Media_Caption_Tags_Parse' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-caption-tags-parse.php', 'WPML_Media_Custom_Field_Batch_Url_Translation' => __DIR__ . '/../..' . '/classes/batch-media-url-translation/wpml-media-custom-field-batch-media-url-translation.php', 'WPML_Media_Custom_Field_Batch_Url_Translation_Factory' => __DIR__ . '/../..' . '/classes/batch-media-url-translation/wpml-media-custom-field-batch-media-url-translation-factory.php', 'WPML_Media_Custom_Field_Images_Translation' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-custom-field-images-translation.php', 'WPML_Media_Custom_Field_Images_Translation_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-custom-field-images-translation-factory.php', 'WPML_Media_Dependencies' => __DIR__ . '/../..' . '/inc/wpml-media-dependencies.class.php', 'WPML_Media_Editor_Notices' => __DIR__ . '/../..' . '/classes/menus/wpml-media-translations-editor-notices.php', 'WPML_Media_Editor_Notices_Factory' => __DIR__ . '/../..' . '/classes/menus/wpml-media-translations-editor-notices-factory.php', 'WPML_Media_Factory' => __DIR__ . '/../..' . '/classes/class-wpml-media-factory.php', 'WPML_Media_File' => __DIR__ . '/../..' . '/classes/class-wpml-media-file.php', 'WPML_Media_File_Factory' => __DIR__ . '/../..' . '/classes/class-wpml-media-file-factory.php', 'WPML_Media_Help_Tab' => __DIR__ . '/../..' . '/classes/menus/wpml-media-help-tab.php', 'WPML_Media_Help_Tab_Factory' => __DIR__ . '/../..' . '/classes/menus/wpml-media-help-tab-factory.php', 'WPML_Media_Image_Translate' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-image-translate.php', 'WPML_Media_Menus' => __DIR__ . '/../..' . '/classes/menus/wpml-media-menus.php', 'WPML_Media_Menus_Factory' => __DIR__ . '/../..' . '/classes/menus/wpml-media-menus-factory.php', 'WPML_Media_Populate_Media_Strings_Translations' => __DIR__ . '/../..' . '/classes/media-translation/wpml-translation-editor/class-wpml-media-populate-media-strings-translations.php', 'WPML_Media_Populate_Media_Strings_Translations_Factory' => __DIR__ . '/../..' . '/classes/media-translation/wpml-translation-editor/class-wpml-media-populate-media-strings-translations-factory.php', 'WPML_Media_Post_Batch_Url_Translation' => __DIR__ . '/../..' . '/classes/batch-media-url-translation/wpml-media-post-batch-media-url-translation.php', 'WPML_Media_Post_Batch_Url_Translation_Factory' => __DIR__ . '/../..' . '/classes/batch-media-url-translation/wpml-media-post-batch-media-url-translation-factory.php', 'WPML_Media_Post_Images_Translation' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-post-images-translation.php', 'WPML_Media_Post_Images_Translation_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-post-images-translation-factory.php', 'WPML_Media_Post_Media_Usage' => __DIR__ . '/../..' . '/classes/media-usage/class-wpml-media-post-media-usage.php', 'WPML_Media_Post_Media_Usage_Factory' => __DIR__ . '/../..' . '/classes/media-usage/class-wpml-media-post-media-usage-factory.php', 'WPML_Media_Post_With_Media_Files' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-post-with-media-files.php', 'WPML_Media_Post_With_Media_Files_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-post-with-media-files-factory.php', 'WPML_Media_Posts_Media_Flag_Notice' => __DIR__ . '/../..' . '/classes/menus/wpml-media-posts-media-flag-notice.php', 'WPML_Media_Posts_Media_Flag_Notice_Factory' => __DIR__ . '/../..' . '/classes/menus/wpml-media-posts-media-flag-notice-factory.php', 'WPML_Media_Privacy_Content' => __DIR__ . '/../..' . '/classes/privacy/class-wpml-media-privacy-content.php', 'WPML_Media_Privacy_Content_Factory' => __DIR__ . '/../..' . '/classes/privacy/class-wpml-media-privacy-content-factory.php', 'WPML_Media_Save_Translation' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-save-translation.php', 'WPML_Media_Save_Translation_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-save-translation-factory.php', 'WPML_Media_Screen_Options' => __DIR__ . '/../..' . '/classes/menus/wpml-media-screen-options.php', 'WPML_Media_Screen_Options_Factory' => __DIR__ . '/../..' . '/classes/menus/wpml-media-screen-options-factory.php', 'WPML_Media_Selector' => __DIR__ . '/../..' . '/classes/media-selector/class-wpml-media-selector.php', 'WPML_Media_Selector_Factory' => __DIR__ . '/../..' . '/classes/media-selector/class-wpml-media-selector-factory.php', 'WPML_Media_Set_Initial_Language' => __DIR__ . '/../..' . '/classes/setup/class-wpml-media-set-initial-language.php', 'WPML_Media_Set_Initial_Language_Factory' => __DIR__ . '/../..' . '/classes/setup/class-wpml-media-set-initial-language-factory.php', 'WPML_Media_Set_Posts_Media_Flag' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-set-posts-media-flag.php', 'WPML_Media_Set_Posts_Media_Flag_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-set-posts-media-flag-factory.php', 'WPML_Media_Sizes' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-sizes.php', 'WPML_Media_String_Batch_Url_Translation' => __DIR__ . '/../..' . '/classes/batch-media-url-translation/wpml-media-string-batch-media-url-translation.php', 'WPML_Media_String_Batch_Url_Translation_Factory' => __DIR__ . '/../..' . '/classes/batch-media-url-translation/wpml-media-string-batch-media-url-translation-factory.php', 'WPML_Media_String_Images_Translation' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-string-images-translation.php', 'WPML_Media_String_Images_Translation_Factory' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-string-images-translation-factory.php', 'WPML_Media_Submitted_Basket_Notice' => __DIR__ . '/../..' . '/classes/media-selector/class-wpml-media-submitted-basket-notice.php', 'WPML_Media_Submitted_Basket_Notice_Factory' => __DIR__ . '/../..' . '/classes/media-selector/class-wpml-media-submitted-basket-notice-factory.php', 'WPML_Media_Translated_Images_Update' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-translated-images-update.php', 'WPML_Media_Translation_Status' => __DIR__ . '/../..' . '/classes/media-translation/class-wpml-media-translation-status.php', 'WPML_Media_Translations_UI' => __DIR__ . '/../..' . '/classes/menus/wpml-media-translations-ui.php', 'WPML_Media_Upgrade' => __DIR__ . '/../..' . '/inc/wpml-media-upgrade.class.php', 'WPML_Media_Usage' => __DIR__ . '/../..' . '/classes/media-usage/class-wpml-media-usage.php', 'WPML_Media_Usage_Factory' => __DIR__ . '/../..' . '/classes/media-usage/class-wpml-media-usage-factory.php', 'WPML_PHP_Version_Check' => __DIR__ . '/..' . '/wpml-shared/wpml-lib-dependencies/src/dependencies/class-wpml-php-version-check.php');
        public static function getInitializer(\Composer\Autoload\ClassLoader $loader)
        {
        }
    }
}
namespace {
    /**
     * Class WPML_PHP_Version_Check
     */
    class WPML_PHP_Version_Check
    {
        /**
         * WPML_PHP_Version_Check constructor.
         *
         * @param string $required_version Required php version.
         * @param string $plugin_name      Plugin name.
         * @param string $plugin_file      Plugin file.
         * @param string $text_domain      Text domain.
         */
        public function __construct($required_version, $plugin_name, $plugin_file, $text_domain)
        {
        }
        /**
         * Check php version.
         *
         * @return bool
         */
        public function is_ok()
        {
        }
        /**
         * Show notice with php requirement.
         */
        public function php_requirement_message()
        {
        }
    }
    class WPML_Core_Version_Check
    {
        public static function is_ok($package_file_path)
        {
        }
    }
    /*
    Module Name: WPML Dependency Check Module
    Description: This is not a plugin! This module must be included in other plugins (WPML and add-ons) to handle compatibility checks
    Author: OnTheGoSystems
    Author URI: http://www.onthegosystems.com/
    Version: 2.1
    */
    /** @noinspection PhpUndefinedClassInspection */
    class WPML_Dependencies
    {
        protected static $instance;
        public $data_key = 'wpml_dependencies:';
        public $needs_validation_key = 'wpml_dependencies:needs_validation';
        protected function remove_old_admin_notices()
        {
        }
        public function run_validation_on_plugins_page()
        {
        }
        public function activated_plugin_action()
        {
        }
        public function deactivated_plugin_action()
        {
        }
        public function upgrader_process_complete_action($upgrader_object, $options)
        {
        }
        public function admin_notices_action()
        {
        }
        public function extra_plugin_headers_action(array $extra_headers = array())
        {
        }
        /**
         * @return WPML_Dependencies
         */
        public static function get_instance()
        {
        }
        public function get_plugins()
        {
        }
        public function init_plugins_action()
        {
        }
        public function get_plugins_validation()
        {
        }
        public function is_plugin_version_valid()
        {
        }
        public function get_expected_versions()
        {
        }
        public function has_invalid_plugins()
        {
        }
    }
    class WPML_Cache_Directory
    {
        const DIR_PERMISSIONS = 0775;
        const MAIN_DIRECTORY_NAME = 'wpml';
        const NOTICE_GROUP = 'wpml-cache-directory';
        const NOTICE_INVALID_CACHE = 'invalid-cache';
        /**
         * WPML_Cache_Directory constructor.
         *
         * @param WPML_WP_API $wp_api
         */
        public function __construct(\WPML_WP_API $wp_api)
        {
        }
        /**
         * @param string $relative_path
         *
         * @return string|bool absolute path or false if we can't have a writable and readable directory
         */
        public function get($relative_path = '')
        {
        }
        /**
         * @param string $relative_path
         */
        public function remove($relative_path = '')
        {
        }
    }
    /**
     * Class WPML_Media_Custom_Field_Batch_Url_Translation_Factory
     */
    class WPML_Media_Custom_Field_Batch_Url_Translation_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Batch_Url_Translation
     */
    abstract class WPML_Media_Batch_Url_Translation
    {
        const BATCH_SIZE = 10;
        const BATCH_SIZE_FACTOR_ALL_MEDIA = 1;
        const BATCH_SIZE_FACTOR_SPECIFIC_MEDIA = 10;
        /**
         * @var wpdb
         */
        protected $wpdb;
        /**
         * WPML_Media_Batch_Url_Translation constructor.
         *
         * @param wpdb $wpdb
         */
        public function __construct(\wpdb $wpdb)
        {
        }
        public function add_hooks()
        {
        }
        public function run_batch()
        {
        }
        /**
         * @param int $number_of_elements_left
         *
         * @return string
         */
        protected abstract function get_response_message($number_of_elements_left);
        /**
         * @param int $offset
         *
         * @return int
         */
        protected abstract function process_batch($offset);
        /**
         * @param int $offset
         * @param int $attachment_id
         *
         * @return int
         */
        protected abstract function process_batch_for_selected_media($offset, $attachment_id);
        /**
         * @return array
         */
        protected abstract function get_ajax_error_message();
        /**
         * @param int $batch_size_factor
         *
         * @return int
         */
        protected function get_batch_size($batch_size_factor = self::BATCH_SIZE_FACTOR_ALL_MEDIA)
        {
        }
        /**
         * @return string
         */
        protected abstract function get_ajax_action();
    }
    /**
     * Class WPML_Media_Custom_Field_Batch_Url_Translation
     */
    class WPML_Media_Custom_Field_Batch_Url_Translation extends \WPML_Media_Batch_Url_Translation implements \IWPML_Action
    {
        const AJAX_ACTION = 'wpml_media_translate_media_url_in_custom_fields';
        /**
         * WPML_Media_Custom_Field_Batch_Url_Translation constructor.
         *
         * @param WPML_Media_Custom_Field_Images_Translation $custom_field_translation
         * @param wpdb                                       $wpdb
         * @param array                                      $translatable_custom_fields
         */
        public function __construct(\WPML_Media_Custom_Field_Images_Translation $custom_field_translation, \wpdb $wpdb, array $translatable_custom_fields)
        {
        }
        /**
         * @return string
         */
        protected function get_ajax_action()
        {
        }
        public static function is_ajax_request()
        {
        }
        /**
         * @param int $number_of_custom_fields_left
         *
         * @return string
         */
        protected function get_response_message($number_of_custom_fields_left)
        {
        }
        protected function get_ajax_error_message()
        {
        }
        protected function process_batch($offset)
        {
        }
        protected function process_batch_for_selected_media($offset, $attachment_id)
        {
        }
    }
    /**
     * Class WPML_Media_Post_Batch_Url_Translation
     */
    class WPML_Media_Post_Batch_Url_Translation extends \WPML_Media_Batch_Url_Translation implements \IWPML_Action
    {
        const AJAX_ACTION = 'wpml_media_translate_media_url_in_posts';
        /**
         * WPML_Media_Post_Batch_Url_Translation constructor.
         *
         * @param WPML_Media_Post_Images_Translation $post_image_translation
         * @param wpdb $wpdb
         */
        public function __construct(\WPML_Media_Post_Images_Translation $post_image_translation, \wpdb $wpdb)
        {
        }
        /**
         * @return string
         */
        protected function get_ajax_action()
        {
        }
        public static function is_ajax_request()
        {
        }
        /**
         * @param int $number_of_posts_left
         *
         * @return string
         */
        protected function get_response_message($number_of_posts_left)
        {
        }
        protected function get_ajax_error_message()
        {
        }
        /**
         * @param int $offset
         *
         * @return int
         */
        protected function process_batch($offset)
        {
        }
        protected function process_batch_for_selected_media($offset, $attachment_id)
        {
        }
    }
    /**
     * Class WPML_Media_Post_Batch_Url_Translation_Factory
     */
    class WPML_Media_Post_Batch_Url_Translation_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_String_Batch_Url_Translation
     */
    class WPML_Media_String_Batch_Url_Translation_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_String_Batch_Url_Translation
     */
    class WPML_Media_String_Batch_Url_Translation extends \WPML_Media_Batch_Url_Translation implements \IWPML_Action
    {
        const BATCH_SIZE = 500;
        const AJAX_ACTION = 'wpml_media_translate_media_url_in_strings';
        /**
         * WPML_Media_String_Batch_Url_Translation constructor.
         *
         * @param wpdb                   $wpdb
         * @param WPML_ST_String_Factory $string_factory
         */
        public function __construct(\wpdb $wpdb, \WPML_ST_String_Factory $string_factory)
        {
        }
        /**
         * @param int $batch_size_factor
         *
         * @return int
         */
        protected function get_batch_size($batch_size_factor = self::BATCH_SIZE_FACTOR_ALL_MEDIA)
        {
        }
        /**
         * @return string
         */
        protected function get_ajax_action()
        {
        }
        public static function is_ajax_request()
        {
        }
        /**
         * @param int $number_of_strings_left
         *
         * @return string
         */
        protected function get_response_message($number_of_strings_left)
        {
        }
        protected function get_ajax_error_message()
        {
        }
        /**
         * @param int $offset
         *
         * @return int
         */
        protected function process_batch($offset)
        {
        }
        protected function process_batch_for_selected_media($offset, $attachment_id)
        {
        }
    }
    class WPML_Media_Set_Initial_Language_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Set_Initial_Language
     */
    class WPML_Media_Set_Initial_Language implements \IWPML_Action
    {
        /**
         * WPML_Media_Set_Initial_Language constructor.
         *
         * @param wpdb   $wpdb
         * @param string $language
         */
        public function __construct(\wpdb $wpdb, $language)
        {
        }
        public function add_hooks()
        {
        }
        public function set()
        {
        }
        public function update_db()
        {
        }
    }
    class WPML_Media_Attachment_By_URL_Factory
    {
        public function create($url, $language, \WPML\Media\Classes\WPML_Media_Attachment_By_URL_Query $media_attachment_by_url_query)
        {
        }
    }
}
namespace WPML\Media\Classes {
    class WPML_Media_Attachment_By_URL_Query
    {
        /**
         * \WPML\Media\Classes\WPML_Media_Attachment_By_URL_Query constructor.
         *
         * @param \wpdb $wpdb
         */
        public function __construct(\wpdb $wpdb)
        {
        }
        /**
         * @return boolean
         */
        public function getWasLastFetchFromCache()
        {
        }
        /**
         * @param string $language
         * @param array  $urls
         */
        public function prefetchAllIdsFromGuids($language, $urls)
        {
        }
        /**
         * @param string $language
         * @param string $url
         */
        public function getIdFromGuid($language, $url)
        {
        }
        /**
         * @param string $language
         * @param array  $pathes
         */
        public function prefetchAllIdsFromMetas($language, $pathes)
        {
        }
        /**
         * @param string $relative_path
         * @param string $language
         */
        public function getIdFromMeta($relative_path, $language)
        {
        }
    }
}
namespace {
    /**
     * Class WPML_Media
     */
    class WPML_Media implements \IWPML_Action
    {
        const SETUP_RUN = 'setup_run';
        const SETUP_STARTED = 'setup_started';
        public $languages;
        public $parents;
        public $unattached;
        /**
         * WPML_Media constructor.
         *
         * @param SitePress                  $sitepress
         * @param wpdb                       $wpdb
         * @param WPML_Media_Menus_Factory   $menus_factory
         * @param WPML_Media_Image_Translate $image_translator
         */
        public function __construct(\SitePress $sitepress, \wpdb $wpdb, \WPML_Media_Menus_Factory $menus_factory, \WPML_Media_Image_Translate $image_translator)
        {
        }
        public function add_hooks()
        {
        }
        public static function has_settings()
        {
        }
        public function loaded()
        {
        }
        /**
         * @param int         $id
         * @param string|null $lang
         *
         * @return int
         */
        public function convertId($id, $lang = \null)
        {
        }
        /**
         * @param string      $url
         * @param string|null $lang
         *
         * @return string
         */
        public function convertUrl($url, $lang = \null)
        {
        }
        function is_admin_or_xmlrpc()
        {
        }
        function is_uploading_plugin_or_theme()
        {
        }
        function plugin_localization()
        {
        }
        /**
         *    Needed by class init and by all static methods that use self::$settings
         */
        public static function init_settings()
        {
        }
        public static function has_setup_run()
        {
        }
        public static function set_setup_run($value = 1)
        {
        }
        public static function has_setup_started()
        {
        }
        public static function set_setup_started($value = 1)
        {
        }
        public static function get_setting($name, $default = \false)
        {
        }
        public static function update_setting($name, $value)
        {
        }
        function batch_scan_prepare()
        {
        }
        static function is_valid_post_type($post_type)
        {
        }
        function find_posts_filter()
        {
        }
        function pre_get_posts($query)
        {
        }
        function media_language_options()
        {
        }
        /**
         * Synchronizes _wpml_media_* meta fields with all translations
         *
         * @param int          $meta_id
         * @param int          $object_id
         * @param string       $meta_key
         * @param string|mixed $meta_value
         */
        function updated_postmeta($meta_id, $object_id, $meta_key, $meta_value)
        {
        }
        /**
         * Add a filter to fix the links for attachments in the language switcher so
         * they point to the corresponding pages in different languages.
         */
        function filter_link($url, $lang_info)
        {
        }
        function wp_get_attachment_url($url, $post_id)
        {
        }
        function icl_ls_languages($w_active_languages)
        {
        }
        function get_post_metadata($value, $object_id, $meta_key, $single)
        {
        }
        /**
         * @param string $menu_id
         */
        public function menu($menu_id)
        {
        }
        public function menu_content()
        {
        }
        /**
         * @param $ids
         * @param $target_language
         *
         * @return array|string
         */
        public function translate_attachment_ids($ids, $target_language)
        {
        }
        /**
         * Update query for media-upload.php page.
         *
         * @param object $query WP_Query
         */
        public function filter_media_upload_items($query)
        {
        }
    }
    /**
     * Class WPML_Media_Attachments_Query_Factory
     */
    class WPML_Media_Attachments_Query_Factory implements \IWPML_Frontend_Action_Loader, \IWPML_Backend_Action_Loader
    {
        /**
         * @return IWPML_Action|WPML_Media_Attachments_Query
         */
        public function create()
        {
        }
    }
    /**
     * @author OnTheGo Systems
     */
    class WPML_Media_Privacy_Content extends \WPML_Privacy_Content
    {
        /**
         * @return string
         */
        protected function get_plugin_name()
        {
        }
        /**
         * @return string|array
         */
        protected function get_privacy_policy()
        {
        }
    }
    /**
     * @author OnTheGo Systems
     */
    class WPML_Media_Privacy_Content_Factory implements \IWPML_Backend_Action_Loader
    {
        /**
         * @return IWPML_Action
         */
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Factory
     */
    class WPML_Media_Factory implements \IWPML_Frontend_Action_Loader, \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Attachment_By_URL
    {
        const SIZE_SUFFIX_REGEXP = '/-([0-9]+)x([0-9]+)\\.([a-z]{3,4})$/';
        const CACHE_KEY_PREFIX = 'attachment-id-from-guid-';
        const CACHE_GROUP = 'wpml-media-setup';
        const CACHE_EXPIRATION = 1800;
        /** @var null|boolean */
        public $cache_hit_flag = \null;
        /**
         * WPML_Media_Attachment_By_URL constructor.
         *
         * @param wpdb                                                   $wpdb
         * @param string                                                 $url
         * @param string                                                 $language
         * @param \WPML\Media\Classes\WPML_Media_Attachment_By_URL_Query $media_attachment_by_url_query
         */
        public function __construct(\wpdb $wpdb, $url, $language, \WPML\Media\Classes\WPML_Media_Attachment_By_URL_Query $media_attachment_by_url_query)
        {
        }
        /**
         * @param string $url
         *
         * @return string
         */
        public static function getUrl($url)
        {
        }
        /**
         * @param string $url
         *
         * @return string
         */
        public static function getUrlNotScaled($url)
        {
        }
        /**
         * @param string $url
         *
         * @return string
         */
        public static function getUrlRelativePath($url)
        {
        }
        /**
         * @param string $relative_path
         *
         * @return string
         */
        public static function getUrlRelativePathOriginal($relative_path)
        {
        }
        /**
         * @param string $url
         *
         * @return string
         */
        public static function getUrlRelativePathScaled($url)
        {
        }
        public function get_id()
        {
        }
    }
}
namespace WPML\Media\Factories {
    class WPML_Media_Attachment_By_URL_Query_Factory
    {
        public function create()
        {
        }
    }
}
namespace {
    /**
     * @author OnTheGo Systems
     */
    class WPML_Media_Sizes
    {
        /**
         * @param array $img
         *
         * @return null|string
         */
        public function get_size_from_class(array $img)
        {
        }
        /**
         * @param array $img
         *
         * @return null|string
         */
        public function get_size_from_attributes(array $img)
        {
        }
        /**
         * @param array $img
         *
         * @return null|string
         */
        public function get_attachment_size(array $img)
        {
        }
        /**
         * @param $url
         * @param $attachment_id
         *
         * @return null|string
         */
        public function get_image_size_from_url($url, $attachment_id)
        {
        }
    }
    /**
     * Class WPML_Media_Custom_Field_Images_Translation
     * Translate images in posts custom fields translations when a custom field is created or updated
     */
    class WPML_Media_Custom_Field_Images_Translation implements \IWPML_Action
    {
        /**
         * WPML_Media_Custom_Field_Images_Translation constructor.
         *
         * @param WPML_Media_Translated_Images_Update $images_updater
         * @param SitePress                           $sitepress
         * @param TranslationManagement               $iclTranslationManagement
         */
        public function __construct(\WPML_Media_Translated_Images_Update $images_updater, \SitePress $sitepress, \TranslationManagement $iclTranslationManagement)
        {
        }
        public function add_hooks()
        {
        }
        /**
         * @param int    $meta_id
         * @param int    $object_id
         * @param string $meta_key
         * @param string $meta_value
         */
        public function translate_images($meta_id, $object_id, $meta_key, $meta_value)
        {
        }
    }
}
namespace WPML\Media\Classes {
    abstract class WPML_Media_Element_Parser
    {
        protected $blockText;
        public function __construct($blockText)
        {
        }
        public abstract function getMediaElements();
        public abstract function getMediaSrcFromAttributes($attrs);
        public abstract function validate();
        protected function getAttachments($matches)
        {
        }
    }
    /**
     * Media file block parser
     */
    class WPML_Non_Embedded_Pdf_Parser extends \WPML\Media\Classes\WPML_Media_Element_Parser
    {
        public function getMediaElements()
        {
        }
        public function getMediaSrcFromAttributes($attrs)
        {
        }
        protected function getFromTags()
        {
        }
        /**
         * Checks if media element is File Block and has pdf.
         *
         * @return bool
         */
        public function validate()
        {
        }
    }
    abstract class WPML_Media_Classic_Element_Parser extends \WPML\Media\Classes\WPML_Media_Element_Parser
    {
        /**
         * Gets string out of the video element, this string should be ending with the video extension, then last 3 characters from string are returned.
         *
         * @return false|string
         */
        protected abstract function extractExtension();
        /**
         * Returns regular expression used to detect matches of the media element in a string.
         *
         * @return string
         */
        protected abstract function getMediaElementRegex();
        /**
         * Returns regular expression used to detect the extension of media element in a string.
         *
         * @return string
         */
        protected abstract function getMediaExtensionExpression();
        public function getMediaElements()
        {
        }
        /**
         * Returns the source of the media element according to its extension in the attrs array (for example : mp3, mp4., ...).
         *
         * @param array $attrs
         *
         * @return string
         */
        public function getMediaSrcFromAttributes($attrs)
        {
        }
        /**
         * Applies regular expression match to get the media element extension and returns the matches.
         *
         * @return mixed
         */
        protected function getExtensionMatches()
        {
        }
    }
    /**
     * Classic audio parser
     */
    class WPML_Media_Classic_Audio_Parser extends \WPML\Media\Classes\WPML_Media_Classic_Element_Parser
    {
        const Media_Element_Expression = '/\\[audio ([^]]+)\\]/s';
        const Media_Extension_Expression = '/\\[audio.+?(?=="http)/';
        /**
         * Extracts the extension of the classic audio media element, defaults to mp3.
         *
         * @return false|string
         */
        protected function extractExtension()
        {
        }
        protected function getMediaElementRegex()
        {
        }
        protected function getMediaExtensionExpression()
        {
        }
        /**
         * Checks if media element is classic audio (audio uploaded in classic editor).
         *
         * @return bool
         */
        public function validate()
        {
        }
    }
}
namespace {
    /**
     * Class WPML_Media_Custom_Field_Images_Translation_Factory
     */
    class WPML_Media_Custom_Field_Images_Translation_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Set_Posts_Media_Flag implements \IWPML_Action
    {
        const HAS_MEDIA_POST_FLAG = '_wpml_media_has_media';
        const BATCH_SIZE = 100;
        public function __construct(\wpdb $wpdb, \WPML_Notices $wpml_notices, \WPML_Media_Post_Media_Usage $post_media_usage, \WPML_Media_Post_With_Media_Files_Factory $post_with_media_files_factory)
        {
        }
        public function add_hooks()
        {
        }
        public function clear_flags_action()
        {
        }
        public function clear_flags()
        {
        }
        public function process_batch_action()
        {
        }
        public function process_batch($offset)
        {
        }
        public function update_post_flag($post_id)
        {
        }
    }
}
namespace WPML\Media\Classes {
    /**
     * Image block parser
     */
    class WPML_Media_Image_Parser extends \WPML\Media\Classes\WPML_Media_Element_Parser
    {
        protected static $getFromCssBackgroundImagesRegex = '/<\\w+[^>]+style\\s?=\\s?"[^"]*?background-image:url\\(\\s?([^\\s\\)]+)\\s?\\)/';
        protected static $mediaElementsRegex = ['/<img ([^>]+)>/s', '/<video ([^>]+)>/s', '/<audio ([^>]+)>/s'];
        public function getMediaElements()
        {
        }
        public function getMediaSrcFromAttributes($attrs)
        {
        }
        protected function getFromTags()
        {
        }
        /**
         * Checks if media element is Image Block and 'parse_blocks' function exists.
         *
         * @return bool
         */
        public function validate()
        {
        }
        /**
         * `parse_blocks` does not specify which kind of collection it should return
         * (not always an array of `WP_Block_Parser_Block`) and the block parser can be filtered,
         *  so we'll cast it to a standard object for now.
         *
         * @param mixed $block
         *
         * @return \stdClass|\WP_Block_Parser_Block
         */
        protected function sanitizeBlock($block)
        {
        }
        /**
         * @param string $text
         *
         * @return array
         */
        protected function getFromCssBackgroundImages($text)
        {
        }
        /**
         * @param array $blocks
         *
         * @return array
         */
        protected function getFromCssBackgroundImagesInBlocks($blocks)
        {
        }
    }
}
namespace {
    class WPML_Media_Populate_Media_Strings_Translations_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Populate_Media_Strings_Translations implements \IWPML_Action
    {
        public function __construct(\WPML_Translation_Element_Factory $translation_element_factory, \WPML_Element_Translation_Package $translation_package)
        {
        }
        public function add_hooks()
        {
        }
        public function populate($prev_translation, $package, $lang)
        {
        }
    }
}
namespace WPML\Media\Classes {
    /**
     * Media file block parser
     */
    class WPML_Media_File_Parser extends \WPML\Media\Classes\WPML_Media_Element_Parser
    {
        public function getMediaElements()
        {
        }
        public function getMediaSrcFromAttributes($attrs)
        {
        }
        protected function getFromTags()
        {
        }
        /**
         * Checks if media element is File Block and 'parse_blocks' function exists.
         *
         * @return bool
         */
        public function validate()
        {
        }
    }
    /**
     * Classic video parser
     */
    class WPML_Media_Classic_Video_Parser extends \WPML\Media\Classes\WPML_Media_Classic_Element_Parser
    {
        const Media_Element_Expression = '/\\[video ([^]]+)\\]/s';
        const Media_Extension_Expression = '/\\[video.+?(?=="http)/';
        /**
         * Extracts the extension of the classic video media element, defaults to mp4.
         *
         * @return false|string
         */
        protected function extractExtension()
        {
        }
        protected function getMediaElementRegex()
        {
        }
        protected function getMediaExtensionExpression()
        {
        }
        /**
         * Checks if media element is classic video (video uploaded in classic editor).
         *
         * @return bool
         */
        public function validate()
        {
        }
    }
}
namespace WPML\Media\Factories {
    class WPML_Media_Element_Parser_Factory
    {
        /**
         * Returns array of media parsers according to post content.
         *
         * @param string $post_content
         *
         * @return array
         */
        public function create($post_content)
        {
        }
    }
}
namespace WPML\Media\Classes {
    /**
     * Media in href parser (basically for files included in classic editor)
     */
    class WPML_Media_Href_Parser extends \WPML\Media\Classes\WPML_Media_Element_Parser
    {
        // to get matches for anchors after filtering them (filtering means that we get only anchors without nested tags)
        public function getMediaElements()
        {
        }
        public function getMediaSrcFromAttributes($attrs)
        {
        }
        protected function getFromTags()
        {
        }
        /**
         * Checks if media element is only anchor with href (basically for files uploaded in classic editor).
         *
         * @return bool
         */
        public function validate()
        {
        }
        /**
         * Gets anchor tags from WP editor that contain neither nested tags not 'wp-block' string in it.
         *
         * @return array
         */
        public function getAnchorsWithoutNestedTags()
        {
        }
    }
}
namespace {
    /**
     * Class WPML_Media_Translated_Images_Update
     * Translates images in a given text
     */
    class WPML_Media_Translated_Images_Update
    {
        /**
         * WPML_Media_Translated_Images_Update constructor.
         *
         * @param \WPML\Media\Factories\WPML_Media_Element_Parser_Factory $media_parser_factory
         * @param WPML_Media_Image_Translate                              $image_translator
         * @param WPML_Media_Sizes                                        $media_sizes
         */
        public function __construct(\WPML\Media\Factories\WPML_Media_Element_Parser_Factory $media_parser_factory, \WPML_Media_Image_Translate $image_translator, \WPML_Media_Sizes $media_sizes)
        {
        }
        /**
         * @param string $text
         * @param string $target_language
         * @param string $source_language
         *
         * @return string
         */
        public function replace_images_with_translations($text, $target_language, $source_language = \null)
        {
        }
    }
    class WPML_Media_Post_With_Media_Files
    {
        /**
         * WPML_Media_Post_With_Media_Files constructor.
         *
         * @param $post_id
         * @param \WPML\Media\Factories\WPML_Media_Element_Parser_Factory $media_parser_factory
         * @param WPML_Media_Attachment_By_URL_Factory $attachment_by_url_factory
         * @param SitePress $sitepress
         * @param WPML_Custom_Field_Setting_Factory $cf_settings_factory
         * @param \WPML\Media\Factories\WPML_Media_Attachment_By_URL_Query_Factory $mediaAttachmentByURLQueryFactory
         */
        public function __construct($post_id, \WPML\Media\Factories\WPML_Media_Element_Parser_Factory $media_parser_factory, \WPML_Media_Attachment_By_URL_Factory $attachment_by_url_factory, \SitePress $sitepress, \WPML_Custom_Field_Setting_Factory $cf_settings_factory, \WPML\Media\Factories\WPML_Media_Attachment_By_URL_Query_Factory $mediaAttachmentByURLQueryFactory)
        {
        }
        public function get_media_ids()
        {
        }
        /**
         * @param $languages
         *
         * @return array
         */
        public function get_untranslated_media($languages)
        {
        }
    }
    /**
     * Class WPML_Media_Image_Translate
     * Allows getting translated images in a give language from an attachment
     */
    class WPML_Media_Image_Translate
    {
        const URLS_TO_IDS_CACHE_KEY = 'urls-to-ids-cache-key';
        /**
         * WPML_Media_Image_Translate constructor.
         *
         * @param SitePress                                                        $sitepress
         * @param WPML_Media_Attachment_By_URL_Factory                             $attachment_by_url_factory
         * @param \WPML\Media\Factories\WPML_Media_Attachment_By_URL_Query_Factory $media_attachment_by_url_query_factory
         */
        public function __construct(\SitePress $sitepress, \WPML_Media_Attachment_By_URL_Factory $attachment_by_url_factory, \WPML\Media\Factories\WPML_Media_Attachment_By_URL_Query_Factory $media_attachment_by_url_query_factory)
        {
        }
        /**
         * @param string $source_language
         * @param array  $items_to_translate
         */
        public function prefetchDataForFutureGetTranslatedImageCalls($source_language, $items_to_translate)
        {
        }
        /**
         * @param int         $attachment_id
         * @param string|null $language
         * @param string|null $size
         *
         * @return string
         */
        public function get_translated_image($attachment_id, $language = \null, $size = \null)
        {
        }
        /**
         * @param string      $img_src
         * @param string|null $source_language
         * @param string|null $target_language
         *
         * @return string|bool
         */
        public function get_translated_image_by_url($img_src, $source_language, $target_language)
        {
        }
        /**
         * @param string      $img_src
         * @param string|null $source_language
         *
         * @return int
         */
        public function get_attachment_id_by_url($img_src, $source_language = \null)
        {
        }
    }
    class WPML_Media_Set_Posts_Media_Flag_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Post_Images_Translation
     * Translate images in posts translations when a post is created or updated
     */
    class WPML_Media_Post_Images_Translation implements \IWPML_Action
    {
        const ALT_PLACEHOLDER = '{%ALT_TEXT%}';
        const CAPTION_PLACEHOLDER = '{%CAPTION%}';
        public function __construct(\WPML_Media_Translated_Images_Update $images_updater, \SitePress $sitepress, \wpdb $wpdb, \WPML_Translation_Element_Factory $translation_element_factory, \WPML_Media_Custom_Field_Images_Translation_Factory $custom_field_images_translation_factory, \WPML_Media_Usage_Factory $media_usage_factory)
        {
        }
        public function add_hooks()
        {
        }
        /**
         * @param int $post_id
         */
        public function translate_images($post_id)
        {
        }
        /**
         * @param int $master_post_id
         * @param string $language
         * @param array $post_array
         * @param int $post_id
         */
        public function translate_images_in_duplicate($master_post_id, $language, $post_array, $post_id)
        {
        }
        /**
         * @param array $postarr
         * @param stdClass $job
         *
         * @return array
         */
        public function translate_images_in_content(array $postarr, \stdclass $job)
        {
        }
        public function translate_url_in_post($attachment_id, $posts = array())
        {
        }
        public function replace_placeholders_and_id_in_caption_shortcode(array $postarr, \stdClass $job)
        {
        }
        public function replace_caption_placeholders_in_string($text, $media, $language)
        {
        }
        /**
         * @param int      $new_post_id
         * @param array    $fields
         * @param stdClass $job
         */
        public function replace_caption_placeholders_in_fields(array $fields, \stdClass $job)
        {
        }
        public function restore_placeholders_in_translated_job_body($new_body)
        {
        }
    }
    /**
     * Class WPML_Media_Attachment_Image_Update
     * Allows adding a custom image to a translated attachment
     */
    class WPML_Media_Attachment_Image_Update implements \IWPML_Action
    {
        const TRANSIENT_FILE_UPLOAD_PREFIX = 'wpml_media_file_update_';
        /**
         * WPML_Media_Attachment_Image_Update constructor.
         *
         * @param wpdb $wpdb
         */
        public function __construct(\wpdb $wpdb)
        {
        }
        public function add_hooks()
        {
        }
        public function handle_upload()
        {
        }
    }
    /**
     * Class WPML_Media_Attachment_Image_Update_Factory
     */
    class WPML_Media_Attachment_Image_Update_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Caption_Tags_Parse
     */
    class WPML_Media_Caption_Tags_Parse
    {
        /**
         * @param string $text
         *
         * @return array
         */
        public function get_captions($text)
        {
        }
    }
    class WPML_Media_Translation_Status
    {
        const NOT_TRANSLATED = 'media-not-translated';
        const IN_PROGRESS = 'in-progress';
        const TRANSLATED = 'media-translated';
        const NEEDS_MEDIA_TRANSLATION = 'needs-media-translation';
        const STATUS_PREFIX = '_translation_status_';
    }
    /**
     * Class WPML_Media_Post_Images_Translation_Factory
     */
    class WPML_Media_Post_Images_Translation_Factory implements \IWPML_REST_Action_Loader, \IWPML_Backend_Action_Loader
    {
        /**
         * @return IWPML_Action|null|WPML_Media_Post_Images_Translation
         */
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Save_Translation_Factory
     */
    class WPML_Media_Save_Translation_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Save_Translation implements \IWPML_Action
    {
        /**
         * WPML_Media_Save_Translation constructor.
         *
         * @param SitePress                        $sitepress
         * @param wpdb                             $wpdb
         * @param WPML_Media_File_Factory          $media_file_factory
         * @param WPML_Translation_Element_Factory $translation_element_factory
         */
        public function __construct(\SitePress $sitepress, \wpdb $wpdb, \WPML_Media_File_Factory $media_file_factory, \WPML_Translation_Element_Factory $translation_element_factory)
        {
        }
        public function add_hooks()
        {
        }
        public function save_media_translation()
        {
        }
        public function get_post_trid_value()
        {
        }
        public function get_post_lang_value()
        {
        }
    }
    /**
     * Class WPML_Media_Caption
     */
    class WPML_Media_Caption
    {
        public function __construct($caption_shortcode, $attributes_data, $content_string)
        {
        }
        /**
         * @return int
         */
        public function get_id()
        {
        }
        public function get_caption()
        {
        }
        public function get_shortcode_string()
        {
        }
        public function get_content()
        {
        }
        public function get_image_alt()
        {
        }
        public function get_link()
        {
        }
    }
    class WPML_Media_Post_With_Media_Files_Factory
    {
        /**
         * @param $post_id
         *
         * @return WPML_Media_Post_With_Media_Files
         */
        public function create($post_id)
        {
        }
    }
}
namespace WPML\Media\Classes {
    class WPML_Media_Element_Translation_Factory
    {
        /**
         * @param int $mediaId
         *
         * @return \WPML_Post_Element
         */
        public static function create($mediaId)
        {
        }
    }
}
namespace {
    /**
     * Class WPML_Media_String_Images_Translation_Factory
     */
    class WPML_Media_String_Images_Translation_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_String_Images_Translation
     * Translate images in posts strings translations when a string translation is created or updated
     */
    class WPML_Media_String_Images_Translation implements \IWPML_Action
    {
        /**
         * WPML_Media_String_Images_Translation constructor.
         *
         * @param WPML_Media_Translated_Images_Update $images_updater
         * @param WPML_ST_String_Factory              $string_factory
         */
        public function __construct(\WPML_Media_Translated_Images_Update $images_updater, \WPML_ST_String_Factory $string_factory)
        {
        }
        public function add_hooks()
        {
        }
        /**
         * @param array  $translation_data
         * @param string $target_language
         * @param int    $string_id
         *
         * @return array
         */
        public function translate_images($translation_data, $target_language, $string_id)
        {
        }
    }
    class WPML_Media_Add_To_Basket implements \IWPML_Action
    {
        /**
         * WPML_Media_Add_To_Basket constructor.
         */
        public function __construct(\SitePress $sitepress)
        {
        }
        public function add_hooks()
        {
        }
        public function add_media($data)
        {
        }
    }
    class WPML_Media_Selector_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Add_To_Basket_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Submitted_Basket_Notice implements \IWPML_Action
    {
        public function __construct(\WPML_Twig_Template_Loader $template_loader)
        {
        }
        public function add_hooks()
        {
        }
        public function load_js()
        {
        }
        public function load_dialog_template()
        {
        }
    }
    class WPML_Media_Submitted_Basket_Notice_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Selector implements \IWPML_Action
    {
        const USER_META_HIDE_POST_MEDIA_SELECTOR = '_wpml_media_hide_post_media_selector';
        public function __construct(\SitePress $sitepress, \WPML_Twig_Template_Loader $template_loader, \WPML_Media_Post_With_Media_Files_Factory $post_with_media_files_factory, \WPML_Translation_Element_Factory $translation_element_factory)
        {
        }
        public function add_hooks()
        {
        }
        public function enqueue_res()
        {
        }
        public function load_images_selector()
        {
        }
        public function toggle_show_media_selector()
        {
        }
        /**
         * @param array    $row_data
         * @param stdClass $doc_data
         *
         * @return array
         */
        public function add_media_data_to_dashboard_row($row_data, $doc_data)
        {
        }
        public function add_media_selector_preloader()
        {
        }
    }
    /**
     * Class WPML_Media_File_Factory
     */
    class WPML_Media_File_Factory
    {
        /**
         * @param $attachment_id
         *
         * @return WPML_Media_File
         */
        public function create($attachment_id)
        {
        }
    }
    class WPML_Media_2_3_0_Migration
    {
        const FLAG = 'wpml_media_2_3_migration';
        const BATCH_SIZE = 200;
        const MAX_BATCH_REQUEST_TIME = 5;
        /**
         * WPML_Media_2_3_0_Migration constructor.
         *
         * @param wpdb      $wpdb
         * @param SitePress $sitepress
         */
        public function __construct(\wpdb $wpdb, \SitePress $sitepress)
        {
        }
        public static function migration_complete()
        {
        }
        public function is_required()
        {
        }
        public function add_hooks()
        {
        }
        public function override_default_menu($menu_elements)
        {
        }
        public function maybe_show_admin_notice()
        {
        }
        public function enqueue_js()
        {
        }
        public function render_menu()
        {
        }
        public function run_upgrade()
        {
        }
    }
    /**
     * Class WPML_Media_Attachments_Query
     */
    class WPML_Media_Attachments_Query implements \IWPML_Action
    {
        public function add_hooks()
        {
        }
        public function adjust_attachment_query_action($query)
        {
        }
        /**
         * Set `suppress_filters` to false if attachment is displayed.
         *
         * @param WP_Query $query
         *
         * @return WP_Query
         */
        public function adjust_attachment_query($query)
        {
        }
    }
    class WPML_Media_Post_Media_Usage implements \IWPML_Action
    {
        /** @see WPML_Post_Translation::save_post_actions() */
        const PRIORITY_AFTER_CORE_SAVE_POST_ACTIONS = 200;
        public function __construct(\SitePress $sitepress, \WPML_Media_Post_With_Media_Files_Factory $post_with_media_files_factory, \WPML_Media_Usage_Factory $media_usage_factory)
        {
        }
        public function add_hooks()
        {
        }
        /**
         * @param int $post_id
         * @param WP_Post|null $post
         */
        public function update_media_usage($post_id, $post = \null)
        {
        }
    }
    class WPML_Media_Usage_Factory
    {
        public function create($attachment_id)
        {
        }
    }
    class WPML_Media_Post_Media_Usage_Factory implements \IWPML_Backend_Action_Loader, \IWPML_Frontend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Usage
    {
        const FIELD_NAME = '_wpml_media_usage';
        /**
         * @param int $attachment_id
         */
        public function __construct($attachment_id)
        {
        }
        /**
         * @return array
         */
        public function get_posts()
        {
        }
        /**
         * @param int $post_id
         */
        public function add_post($post_id)
        {
        }
        /**
         * @param int $post_id
         */
        public function remove_post($post_id)
        {
        }
    }
    class WPML_Media_File
    {
        public function __construct($attachment_id, \WP_Filesystem_Base $wp_filesystem, \wpdb $wpdb)
        {
        }
        public function delete()
        {
        }
    }
    class WPML_Media_Screen_Options implements \IWPML_Action
    {
        /**
         * WPML_Media_Screen_Options constructor.
         *
         * @param array $options
         */
        public function __construct($options)
        {
        }
        public function add_hooks()
        {
        }
        public function add_options()
        {
        }
        public function set_screen_option($status, $option_name, $value)
        {
        }
    }
    /**
     * Class WPML_Media_Screen_Options_Factory
     */
    class WPML_Media_Screen_Options_Factory implements \IWPML_Backend_Action_Loader
    {
        /**
         * @return IWPML_Action|WPML_Media_Screen_Options
         */
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Editor_Notices
     */
    class WPML_Media_Editor_Notices implements \IWPML_Action
    {
        const TEXT_EDIT_NOTICE_DISMISSED = '_wpml_media_editor_text_edit_notice_dismissed';
        public function add_hooks()
        {
        }
        public function dismiss_texts_change_notice()
        {
        }
    }
    /**
     * Class WPML_Media_Editor_Notices_Factory
     */
    class WPML_Media_Editor_Notices_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    /**
     * Class WPML_Media_Translations_UI
     */
    class WPML_Media_Translations_UI extends \WPML_Templates_Factory
    {
        const PREVIEW_MAX_WIDTH = 800;
        const PREVIEW_MAX_HEIGHT = 600;
        /**
         * WPML_Media_Translations_UI constructor.
         *
         * @param SitePress             $sitepress
         * @param wpdb                  $wpdb
         * @param WP_Locale             $wp_locale
         * @param WPML_Query_Filter     $wpml_query_filter
         * @param WPML_Admin_Pagination $pagination
         */
        public function __construct(\SitePress $sitepress, \wpdb $wpdb, \WP_Locale $wp_locale, \WPML_Query_Filter $wpml_query_filter, \WPML_Admin_Pagination $pagination)
        {
        }
        /**
         * @return array
         */
        public function get_model()
        {
        }
        public static function get_translation_status_labels()
        {
        }
        public function set_total_items_in_pagination($query)
        {
        }
        public function filter_request_clause_join($join)
        {
        }
        public function filter_request_clause_where($where)
        {
        }
        protected function init_template_base_dir()
        {
        }
        /**
         * @return string
         */
        public function get_template()
        {
        }
    }
    class WPML_Media_Menus
    {
        /**
         * WPML_Media_Menus constructor.
         *
         * @param WPML_Twig_Template_Loader $template_service
         * @param SitePress                 $sitepress
         * @param wpdb                      $wpdb
         */
        public function __construct(\WPML_Twig_Template_Loader $template_service, \SitePress $sitepress, \wpdb $wpdb, \WPML_Admin_Pagination $pagination = \null)
        {
        }
        public function display()
        {
        }
    }
    class WPML_Media_Posts_Media_Flag_Notice implements \IWPML_Action
    {
        const PREPARE_ACTION = 'wpml-media-has-media-flag-prepare';
        const PROCESS_ACTION = 'wpml-media-has-media-flag';
        const NOTICE_ID = 'wpml-media-posts-media-flag';
        const NOTICE_GROUP = 'wpml-media';
        /**
         * WPML_Media_Has_Media_Notice constructor.
         *
         * @param SitePress $sitepress
         */
        public function __construct(\SitePress $sitepress)
        {
        }
        public function add_hooks()
        {
        }
        public function override_default_menu($menu_elements)
        {
        }
        public function enqueue_js()
        {
        }
        public function add_top_notice()
        {
        }
        public function render_menu()
        {
        }
    }
    class WPML_Media_Posts_Media_Flag_Notice_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
    class WPML_Media_Help_Tab implements \IWPML_Action
    {
        public function add_hooks()
        {
        }
        public function add()
        {
        }
    }
    /**
     * Class WPML_Media_Menus_Factory
     */
    class WPML_Media_Menus_Factory
    {
        public function create()
        {
        }
    }
    class WPML_Media_Help_Tab_Factory implements \IWPML_Backend_Action_Loader
    {
        public function create()
        {
        }
    }
}
namespace WPML\Media\Widgets\Block {
    class DisplayTranslation implements \IWPML_Frontend_Action, \IWPML_DIC_Action
    {
        public function __construct(\WPML_Media_Translated_Images_Update $translatedImageUpdate)
        {
        }
        public function add_hooks()
        {
        }
    }
}
namespace {
    \define('WPML_MEDIA_VERSION', '2.7.4');
    \define('WPML_MEDIA_PATH', \dirname(__FILE__));
    function wpml_media_remove_flag_notice()
    {
    }
    function wpml_media_core_action_filter_loader()
    {
    }
    function wpml_media_load_components()
    {
    }
    function wpml_media_load_components_st()
    {
    }
    function wpml_media_load_components_tm()
    {
    }
    function wpml_media_deactivation_actions()
    {
    }
}